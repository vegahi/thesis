
<<global_options, include=FALSE>>=
library(knitr)
opts_chunk$set(fig.width = 10, fig.height = 5)
@


<<echo = FALSE, message= FALSE>>=
library(citibike)
library(lubridate)
library(ggplot2)
library(tidyr)
library(scales)
library(RColorBrewer)
# example local directory on desktop 
bikes <- etl("citibike", dir = "~/Desktop/citibike_data", 
             db = src_mysql_cnf("citibike", groups = "scidb"))
@

We would also like to know about the total number of trips across years and
months, based on the \var{Start Time}.
With the increasing number of users and more 
stations added into the system, the total number of trips is growing every year.
The total trip number grew from 5 million in 2013 to 
14 million in 2016 see Figure \ref{fig:trips-year}.

\end{doublespacing}

<<echo = FALSE, eval= FALSE>>=
trip_vol_year <- bikes %>%
  tbl("trips") %>%
  mutate(year = YEAR(Start_Time)) %>%
  group_by(year) %>%
  summarise(total_trip = n()) %>%
  collect()

@


<<echo = FALSE>>=
trip_vol_year <- readRDS("trip_vol_year.rds")
@

<<trips-year, echo=FALSE, fig.cap="The number of total trips take place in each year. With system expansion, we could see that the number of rides is increasing each year. The total trip number grew from 5 million in 2013 to 14 million in 2016">>=
ggplot(data = trip_vol_year, aes(year, total_trip, fill = rev(total_trip))) +
  geom_bar(stat = "identity") +
  labs(list(x = "Year", y = "Total Number of Trips")) +
  geom_text(data = trip_vol_year,aes(x = year,y = total_trip, 
                                   label = total_trip), vjust = 0) +
  theme_bw() +
  theme(legend.position = "none")
  
@


The monthly usage shows a similar pattern that people tend to use less 
during the winter time compared to the rest of the year. Figure \ref{fig:trips-month} shows the maximum is
1,648,856 rides, which took place in 2016 September; the minimum is 
196,930 rides during Feburary 2015. Comparing the ratios between the two, the
maximum use is around 8 times larger than the minimum.


<<echo = FALSE, eval= FALSE>>=
trip_vol_month <- bikes %>%
  tbl("trips") %>%
  mutate(year = YEAR(Start_Time), month = MONTH(Start_Time)) %>%
  group_by(year, month) %>%
  summarise(total_trip = n()) %>%
  collect()

@


<<echo = FALSE>>=
trip_vol_month <- readRDS("trip_vol_month.rds")
@


<<trips-month, echo=FALSE, fig.cap="The number of trips at each month starting from 2013 to 2016. People tend to use less during the winter time compared to the rest of the year.">>=
ggplot(data = trip_vol_month, aes(month, total_trip, color = rev(total_trip))) + 
  geom_line() + facet_wrap(~ year) +
  labs(list(x = "Month", y = "Total Number of Trips")) +
  theme_bw() +
  scale_x_continuous(breaks = 1:12)+
  theme(legend.position = "none")
@


Figure \ref{fig:trips-day} shows the use difference across the day of month for all 
four years. Horizontally, the shape is similar for 
the same \var{month} across \var{years}. Vertically, the pattern shows a slight increase 
through \var{years}. We also observe the surges and declines during a month.


<<echo = FALSE, eval= FALSE>>=
trip_vol_day <- bikes %>%
  tbl("trips") %>%
  select(Start_Time, Weekday, DayOfWeek, WeekOfYear) %>%
  mutate(year = YEAR(Start_Time), month = MONTH(Start_Time), 
         day = DAY(Start_Time)) %>%
  group_by(year, month, day, Weekday, DayOfWeek, WeekOfYear) %>%
  summarise(total_trip = n()) %>%
  collect()
@


<<echo = FALSE>>=
trip_vol_day <- readRDS("trip_vol_day.rds")
@


<<trips-day, echo=FALSE, fig.cap="The number of trips per day from 2013 to 2016. A month has similar pattern across years. We also observe the surges and declines during a month.",message= FALSE>>=
ggplot(data = trip_vol_day, aes(day, total_trip, color = rev(total_trip))) + 
  geom_line() + 
  facet_grid(month ~ year) +
  labs(list(x = "Day of Month", y = "Total Number of Trips")) +
  theme_bw() +
  theme(legend.position = "none")
@


We would like to know if declines are related to whether or not a trip occurs on a weekend.
Thus, we combine the weekend information from the \func{trips} table, separate the 
\var{trip\_vol\_day} datasets by year and use heatmaps
to show the daily trip use across years. Figure \ref{fig:trips-day-dot} and Figure \ref{fig:calendar} are generated to 
illustrate the daily trip volume change from 2013 to 2016. Unlike the three other ones, the graph of 2013 only has six columns due to the fact that the recorded data starts from 2013 July.

On each graph, the darkness represents the trip volume of that day relative to the total of the year.
In other words, the traffic at each day is weighted over the total of the year. A darker shade of the
blue represents more people used Citi Bike in that day. On top of the heatmap are the dots. The black
dots mark the days that are during the weekend, the light points stand for the weekdays.

Looking at the figures, we could tell that bikes are more heavily used during summer time
in New York City. Some of the usage declines are due to the weekend influence, while
others are not.



<<echo = FALSE>>=
trip_vol_day2013 <- filter(trip_vol_day,  year == 2013)
trip_vol_day2014 <- filter(trip_vol_day,  year == 2014)
trip_vol_day2015 <- filter(trip_vol_day,  year == 2015)
trip_vol_day2016 <- filter(trip_vol_day,  year == 2016)
trip_vol_day2013 <- trip_vol_day2013 %>%
  mutate(total_trip_weight = total_trip/sum(trip_vol_day2013$total_trip))
trip_vol_day2014 <- trip_vol_day2014 %>%
  mutate(total_trip_weight = total_trip/sum(trip_vol_day2014$total_trip))
trip_vol_day2015 <- trip_vol_day2015 %>%
  mutate(total_trip_weight = total_trip/sum(trip_vol_day2015$total_trip))
trip_vol_day2016 <- trip_vol_day2016 %>%
  mutate(total_trip_weight = total_trip/sum(trip_vol_day2013$total_trip))
color_function <- function(x){ifelse(x < 1, 1, 0)}
@


<<trips-day-dot, echo=FALSE, fig.cap="The daily trip distribution from 2013 to 2016", out.width= "8cm", out.height="8cm", fig.show= "hold">>=
ggplot(trip_vol_day2013, aes(month, day)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") + 
  geom_point(aes(month, day, alpha = color_function(Weekday))) + 
  labs(list(x = "Months in 2013", y = "Day"))+
  theme_bw() +
  theme(legend.position = "none") 

ggplot(trip_vol_day2014, aes(month, day)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") + 
  scale_x_continuous(breaks = 1:12) + 
  geom_point(aes(month, day, alpha = color_function(Weekday))) + 
  labs(list(x = "Months in 2014", y = "Day"))+
  theme_bw() +
  theme(legend.position = "none") 

ggplot(trip_vol_day2015, aes(month, day)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") + 
  scale_x_continuous(breaks = 1:12) + 
  geom_point(aes(month, day, alpha = color_function(Weekday))) + 
  labs(list(x = "Months in 2015", y = "Day"))+
  theme_bw() +
  theme(legend.position = "none") 

ggplot(trip_vol_day2016, aes(month, day)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") + 
  scale_x_continuous(breaks = 1:12) + 
  geom_point(aes(month, day, alpha = color_function(Weekday))) +
  labs(list(x = "Months in 2016", y = "Day"))+
  theme_bw() +
  theme(legend.position = "none")  
@


Notice that the four-day data from 23 to 26 in January 2016 is not showing on the plot.
After checking with the original zip files provided by Citi Bike website, we find that
these records do not exist in the file.

Instead of marking the weekdays, we could also plot the daily trip volume with 
the idea of a calendar. The x axis shows the day of the week, while 1 = Sunday, 
2 = Monday ,..., 7 = Saturday. The y axis represents the week of the year.
Notice that we here exclude the two blue boxes of 12-30-2013 and 12-31-2013 which are in the first week of year of 2014.

<<calendar, echo = FALSE, fig.cap= "Daily trip distribution in calendar mode from 2013 to 2016", out.width= "8cm", out.height="8cm", fig.show= "hold">>=
ggplot(filter(trip_vol_day2013,WeekOfYear !=1), aes(DayOfWeek, WeekOfYear)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") +
  scale_x_continuous(breaks = 1:7, 
                     labels = c("Sunday", "Monday", "Tuesday", "Wednesday", 
                                "Thursday", "Friday", "Saturday")) +
  theme_bw() +
  theme(legend.position = "none") 

ggplot(trip_vol_day2014, aes(DayOfWeek, WeekOfYear)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") +
  scale_x_continuous(breaks = 1:7, 
                     labels = c("Sunday", "Monday", "Tuesday", "Wednesday",
                                "Thursday", "Friday", "Saturday")) +
  theme_bw() +
  theme(legend.position = "none")

ggplot(trip_vol_day2015, aes(DayOfWeek, WeekOfYear)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") +
  scale_x_continuous(breaks = 1:7, 
                     labels = c("Sunday", "Monday", "Tuesday", "Wednesday",
                                "Thursday", "Friday", "Saturday")) +
  theme_bw() +
  theme(legend.position = "none")

ggplot(trip_vol_day2016, aes(DayOfWeek, WeekOfYear)) + 
  geom_tile(aes(fill = total_trip_weight), colour = "white")+
  scale_fill_gradient(low = "white", high = "steelblue") +
  scale_x_continuous(breaks = 1:7, 
                     labels = c("Sunday", "Monday", "Tuesday", "Wednesday",
                                "Thursday", "Friday", "Saturday")) +
  theme_bw() +
  theme(legend.position = "none")
@







